variables:
  CT_USER: "root"
  PROJECT_NAME: "hh_booster"
  PROJECT_DIR: "/data/$PROJECT_NAME"
  REMOTE_SERVER: "172.0.0.107"
  SSH_COMMAND: "ssh $CT_USER@$REMOTE_SERVER"

stages:
  - init
  - deploy
  - reset_db


.ssh_prepare: &ssh_prepare
    - mkdir -p ~/.ssh && touch ~/.ssh/known_hosts
    - grep "$REMOTE_SERVER" ~/.ssh/known_hosts && ssh-keygen -R $REMOTE_SERVER || true
    - ssh-keyscan $REMOTE_SERVER >> ~/.ssh/known_hosts
    - eval "$(ssh-agent -s)" && ssh-add ~/.ssh/id_rsa

.ct_prepare: &ct_prepare
    - echo "CT UPDATE && UPGRADE"
    - $SSH_COMMAND "sudo apt update && sudo apt -y upgrade && sudo apt -y autoremove"
    - echo "CT PYTHON3-PIP INSTALL"
    - $SSH_COMMAND "sudo apt -y install python3-pip python3.11-venv"
    - echo "UPDATING PIP SETUPTOOLS"
    - $SSH_COMMAND "python3 -m pip install --upgrade pip setuptools --break-system-packages"
    - echo "CREATING FOLDER IF NOT EXIST ON CT"
    - $SSH_COMMAND "mkdir -p $PROJECT_DIR /data/logs"
    - echo "CREATING VENV ON CT"
    - $SSH_COMMAND "test -e $PROJECT_DIR/.venv || /usr/bin/python3 -m venv $PROJECT_DIR/.venv"

.update_script: &update_script
    - echo "SENDING LAST VERSION TO CT"
    - /usr/bin/sftp -r $CT_USER@$REMOTE_SERVER:$PROJECT_DIR/ <<< $'put ./*'
    - echo "INSTALLING REQUIREMENTS TO CT"
    - ssh $CT_USER@$REMOTE_SERVER "$PROJECT_DIR/.venv/bin/pip3 install -r $PROJECT_DIR/requirements.txt"

.service_prepare: &service_prepare
    - echo "CREATING HH_BOOSTER SERVICE"
    - |
        $SSH_COMMAND "sudo test -e /etc/systemd/system/hh_booster.service || sudo tee /etc/systemd/system/hh_booster.service > /dev/null << EOF
        [Unit]
        Description=$PROJECT_NAME
        After=network.target
        [Service]
        User=$CT_USER
        WorkingDirectory=$PROJECT_DIR/
        ExecStart=$PROJECT_DIR/.venv/bin/python3 hh_booster.py
        [Install]
        WantedBy=multi-user.target
        EOF" && 
        echo "RESTARTING SYSTEMD DAEMON" && 
        $SSH_COMMAND "sudo systemctl daemon-reload" && 
        echo "ENABLING HH_BOOSTER SERVICE" && 
        $SSH_COMMAND "sudo systemctl enable hh_booster.service"
    - echo "ENABLING AND STARTING HH_BOOSTER SERVICE"
    - $SSH_COMMAND "sudo systemctl enable --now hh_booster"

.restart_services: &restart_services
    - echo "RESTARTING HH_BOOSTER"
    - $SSH_COMMAND "sudo systemctl restart hh_booster"

prepare_ssh_job:
  stage: init
  tags:
    - ct_shell
  script:
    - *ssh_prepare
  allow_failure: false
  needs: []
  when: manual

install_packages_job:
  stage: init
  tags:
    - ct_shell
  script:
    - *ct_prepare
    - *service_prepare
  allow_failure: false
  needs: []
  when: manual

deploy_job:
  stage: deploy
  tags:
    - ct_shell
  script:
    - *update_script
    - *restart_services
  allow_failure: false
  needs: []
  when: manual
